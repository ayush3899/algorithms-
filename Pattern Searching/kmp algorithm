#include<bits/stdc++.h>
using namespace std;

void lparray(char *pat,int m,int *lps)
{
  int l=0;
  lps[0]=0;
  int i=1;
  while(i<m)
  {
    if(pat[i]==pat[l])
    {
      l++;
      lps[i]=l;
      i++;
    }
    else //pat[i]!=pat[len]
    {
      if(l!=0)
      {
        l=lps[l-1];
      }
      else
      {
        lps[i]=0;
        i++;
      }
    }
  }
}


void kmp(char *pat,char *txt)
{
  int m=strlen(pat);
  int n=strlen(txt);
  int lps[m];

  lparray(pat,m,lps);
  int i=0;//index of txt[]
  int j=0;//index of pat

  while(i<n)
  {
    if(pat[j]==txt[i])
    {
    j++;
    i++;
    }
    if(j==m)
    {
      printf("patter found at index %d\n",i-j);
      j=lps[j-1];
    }
    else if(i<n && pat[j]!=txt[i])
    {
      if(j!=0)
        j=lps[j-1];
      else
        i=i+1;
    }
  }
}



int main()
{
  char *txt = "ABABDABACDABABCABAB";
  char *pat = "ABABCABAB";
  kmp(pat,txt);
  return 0;
}
