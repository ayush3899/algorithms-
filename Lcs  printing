#include <iostream>
using namespace std;
 
int lcs(string X, string Y,int m,int n)
{
	int L[m+1][n+1];
for (int i=0; i<=m; i++)
{
	for (int j=0; j<=n; j++)
	{
	if (i == 0 || j == 0)
		L[i][j] = 0;
	else if (X[i-1] == Y[j-1])
		L[i][j] = L[i-1][j-1] + 1;
	else
		L[i][j] = max(L[i-1][j], L[i][j-1]);
	}
}
int k= L[m][n];
char lcss[k+1];
lcss[k] = '\0'; 
int i = m, j = n;
while (i > 0 && j > 0)
{
	if (X[i-1] == Y[j-1])
	{
		lcss[k-1] = X[i-1];
		i--; 
		j--;
		k--;
	}
	else if (L[i-1][j] > L[i][j-1])
		i--;
	else
		j--;
}
 
cout << "LCS of " << X << " and " << Y << " is " << lcss<<" and length is "<<L[m][n];
 
	return 0;
}
 
int main() {
	// your code goes here
	string x,y;
	cin>>x;
	cin>>y;
	int m=x.length();
	int n=y.length();
	lcs(x,y,m,n);
	return 0;
}
