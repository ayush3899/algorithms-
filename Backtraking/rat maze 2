#include<bits/stdc++.h>
using namespace std;
#define N 4
int solve_me(int row_arr[],int col_arr[],int index,int i,int j,int maze[N][N])
{
	if(i>=N||j>=N)
	return 0;
	if(i==N-1 && j==N-1 && maze[i][j]==1)
	{
		row_arr[index]=i;
		col_arr[index]=j;
  	return 1;
	}
	if(maze[i][j]==0)
	return 0;
	
  row_arr[index]=i;
	col_arr[index]=j;
 	if(solve_me(row_arr,col_arr,index+1,i+1,j,maze))
	return 1;
	else
	return solve_me(row_arr,col_arr,index+1,i,j+1,maze);
}

int main()
{
    int maze[N][N]  =  { {1, 0, 0, 0},
        				         {1, 1, 0, 1},
        				         {0, 1, 0, 0},
        				         {1, 1, 1, 1}
    };
 	int row_arr[2*N],i,j, col_arr[2*N];
  int a= solve_me(row_arr,col_arr,0,0,0,maze);
   		if(a!=1)
   		{	
   			cout<<"No Possible Path"<<endl;
   		}
   		else
   		{
   			for(i=0;i<N;i++)
   			for(j=0;j<N;j++)
   			{
   				maze[i][j]=0;
   			}
   			for(i=0;i<2*N-1;i++)
   			maze[row_arr[i]][col_arr[i]]=1;
   			for(i=0;i<N;i++)
   			{
   				for(j=0;j<N;j++)
   				cout<<maze[i][j]<<" ";
   				cout<<endl;
   			}
   		}
    return 0;
}
